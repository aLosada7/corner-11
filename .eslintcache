[{"/Users/alvarolosada/Desktop/corner-11/src/common/Theme.js":"1","/Users/alvarolosada/Desktop/corner-11/src/hoc/ReactAux/ReactAux.js":"2","/Users/alvarolosada/Desktop/corner-11/src/axios-manager.js":"3","/Users/alvarolosada/Desktop/corner-11/src/index.tsx":"4","/Users/alvarolosada/Desktop/corner-11/src/components/app/App.tsx":"5","/Users/alvarolosada/Desktop/corner-11/src/hoc/Layout/Layout.tsx":"6","/Users/alvarolosada/Desktop/corner-11/src/store/index.ts":"7","/Users/alvarolosada/Desktop/corner-11/src/components/auth/Auth.tsx":"8","/Users/alvarolosada/Desktop/corner-11/src/store/auth/types.ts":"9","/Users/alvarolosada/Desktop/corner-11/src/store/auth/actions.ts":"10","/Users/alvarolosada/Desktop/corner-11/src/store/auth/reducers.ts":"11","/Users/alvarolosada/Desktop/corner-11/src/store/modules/index.ts":"12","/Users/alvarolosada/Desktop/corner-11/src/store/modules/auth.ts":"13","/Users/alvarolosada/Desktop/corner-11/src/components/landing/Landing.tsx":"14"},{"size":1286,"mtime":1613664394747,"results":"15","hashOfConfig":"16"},{"size":71,"mtime":1613559524347,"results":"17","hashOfConfig":"16"},{"size":499,"mtime":1613649002039,"results":"18","hashOfConfig":"16"},{"size":615,"mtime":1613564355557,"results":"19","hashOfConfig":"16"},{"size":958,"mtime":1613652466815,"results":"20","hashOfConfig":"16"},{"size":395,"mtime":1613560306826,"results":"21","hashOfConfig":"16"},{"size":727,"mtime":1613636482118,"results":"22","hashOfConfig":"16"},{"size":2706,"mtime":1613652421151,"results":"23","hashOfConfig":"16"},{"size":698,"mtime":1613650209322,"results":"24","hashOfConfig":"16"},{"size":154,"mtime":1613561146463,"results":"25","hashOfConfig":"16"},{"size":761,"mtime":1613650204255,"results":"26","hashOfConfig":"16"},{"size":305,"mtime":1613652283225,"results":"27","hashOfConfig":"16"},{"size":1786,"mtime":1613651805288,"results":"28","hashOfConfig":"16"},{"size":5542,"mtime":1613664842085,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"19lb8vd",{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"39"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"39"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/alvarolosada/Desktop/corner-11/src/common/Theme.js",[],"/Users/alvarolosada/Desktop/corner-11/src/hoc/ReactAux/ReactAux.js",[],["62","63"],"/Users/alvarolosada/Desktop/corner-11/src/axios-manager.js",[],"/Users/alvarolosada/Desktop/corner-11/src/index.tsx",[],["64","65"],"/Users/alvarolosada/Desktop/corner-11/src/components/app/App.tsx",[],"/Users/alvarolosada/Desktop/corner-11/src/hoc/Layout/Layout.tsx",[],"/Users/alvarolosada/Desktop/corner-11/src/store/index.ts",[],"/Users/alvarolosada/Desktop/corner-11/src/components/auth/Auth.tsx",["66","67","68"],"import React, { useState } from 'react';\nimport { makeStyles, useTheme } from \"@material-ui/styles\"; \nimport { connect } from 'react-redux';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField'; \n//import useMediaQuery from '@material-ui/core/useMediaQuery';\n\nimport { RootState } from '../../store';\nimport { LoginInfo } from '../../store/auth/types';\nimport { Theme } from '@material-ui/core';\nimport { Redirect } from 'react-router-dom';\n\ninterface Props {\n    error: string\n    onSubmit: (user: LoginInfo) => void\n}\n\nconst useStyles = makeStyles<Theme>((theme) =>({\n    root: {\n        maxWidth: '100%'\n    }\n}));\n\nexport const Auth = (props: Props) => {\n    const classes = useStyles();\n    //const theme = useTheme();\n    const matchesMD = false; //useMediaQuery(theme.breakpoints.down(\"md\"));\n\n    const [formState, setFormState] = useState({ 'email': '', 'password': ''});\n\n    let error = null;\n    if (props.error) {\n        error = props.error\n    }\n\n    const updateInputValue = (type: any, value: any) => {\n        setFormState({ ...formState, [type]: value })\n    }\n\n    const login = () => {\n        console.log(\"login fired\")\n        props.onSubmit({ email: formState.email, password: formState.password });\n    }\n\n    let topLogin = null;\n\n    if (!matchesMD) {\n        topLogin = (\n            <Grid direction=\"column\" item container>\n                <TextField \n                    variant=\"outlined\"\n                    placeholder=\"Enter email\"\n                    size=\"small\"\n                    value={formState.email}\n                    onChange={(event) => updateInputValue('email', event.target.value)}\n                            />\n                <TextField \n                    variant=\"outlined\"\n                    placeholder=\"Enter password\"\n                    size=\"small\"\n                    value={formState.password}\n                    onChange={(event) => updateInputValue('password', event.target.value)}\n                />\n                <Button data-testid=\"login-button\" variant=\"outlined\" onClick={login}>\n                    Sign In\n                </Button>\n            </Grid>\n        )\n    }\n\n    return (\n        <div className={classes.root}>\n            {props.error}\n            <Grid container direction=\"column\">\n                { topLogin }\n            </Grid>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state: RootState) => {\n    return {\n        error: state.auth.error\n    }\n}\n\nconst mapDispatchToProps = {\n    onSubmit: (user: LoginInfo) => ({ type: 'LOGIN', payload: user })\n}\n\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);","/Users/alvarolosada/Desktop/corner-11/src/store/auth/types.ts",[],"/Users/alvarolosada/Desktop/corner-11/src/store/auth/actions.ts",[],"/Users/alvarolosada/Desktop/corner-11/src/store/auth/reducers.ts",[],"/Users/alvarolosada/Desktop/corner-11/src/store/modules/index.ts",[],"/Users/alvarolosada/Desktop/corner-11/src/store/modules/auth.ts",["69"],"import axios from '../../axios-manager';\nimport { put } from 'redux-saga/effects';\nimport { LOGIN_FAILED, LOGIN_SUCCESS } from '../auth/types';\n\nexport function* loginSaga(action: any) {\n    try {\n        let url = yield '/api/v1/auth/login';\n\n        let response = yield axios.post(url, action.payload);\n\n        if (response.data.success) {\n            const expirationDate = yield new Date(new Date().getTime() + (86400 * 60));\n            yield localStorage.setItem('token', response.data.token);\n            yield localStorage.setItem('expirationDate', expirationDate);\n            yield put({ type: LOGIN_SUCCESS, token: response.data.token });\n        } else {\n            yield put({ type: LOGIN_FAILED, errorMessage: response.data  ? response.data.error : \"ERROR.UNEXPECTED-ERROR\" });\n        }\n    } catch (error) {\n        error = error.response;\n        yield put({ type: LOGIN_FAILED, errorMessage: error.data ? error.data.error : \"ERROR.UNEXPECTED-ERROR\" });\n    }\n};\n/*\nexport function* setUserSaga(action: any) {\n    try {\n\n        const expirationDate = new Date(new Date().getTime() + (86400 * 60));\n        yield localStorage.setItem('token', action.token);\n        yield localStorage.setItem('expirationDate', expirationDate.toString());\n\n        let url = '/api/v1/auth/me';\n        \n        let response = yield axios.get(url);\n        response = response.data;\n\n        if (response.success) {\n            yield put({ type: SET_USER_SUCCESS, data: response.data});\n        } else {\n            yield put({ type: SET_USER_FAILED, error: response.error ? response.error : \"ERROR.UNEXPECTED-ERROR\" });\n        }\n    } catch (error) {\n        yield put({ type: SET_USER_FAILED, error: error.response  ? error.response.data  : \"ERROR.UNEXPECTED-ERROR\" });\n    }\n};\n*/","/Users/alvarolosada/Desktop/corner-11/src/components/landing/Landing.tsx",[],{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":2,"column":22,"nodeType":"76","messageId":"77","endLine":2,"endColumn":30},{"ruleId":"74","severity":1,"message":"78","line":12,"column":10,"nodeType":"76","messageId":"77","endLine":12,"endColumn":18},{"ruleId":"74","severity":1,"message":"79","line":34,"column":9,"nodeType":"76","messageId":"77","endLine":34,"endColumn":14},{"ruleId":"80","severity":1,"message":"81","line":20,"column":9,"nodeType":"76","messageId":"82","endLine":20,"endColumn":14},"no-native-reassign",["83"],"no-negated-in-lhs",["84"],"@typescript-eslint/no-unused-vars","'useTheme' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","'error' is assigned a value but never used.","no-ex-assign","Do not assign to the exception parameter.","unexpected","no-global-assign","no-unsafe-negation"]